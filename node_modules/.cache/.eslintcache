[{"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/index.js":"1","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/reportWebVitals.js":"2","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/App.js":"3","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Header.js":"4","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Main.js":"5","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Footer.js":"6","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/PopupWithForm.js":"7","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/ImagePopup.js":"8","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/utils/api.js":"9"},{"size":511,"mtime":1645952557676,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1645952557676,"results":"12","hashOfConfig":"11"},{"size":4486,"mtime":1645992254592,"results":"13","hashOfConfig":"11"},{"size":328,"mtime":1645952557663,"results":"14","hashOfConfig":"11"},{"size":1939,"mtime":1646075004069,"results":"15","hashOfConfig":"11"},{"size":267,"mtime":1645952557663,"results":"16","hashOfConfig":"11"},{"size":816,"mtime":1645991918178,"results":"17","hashOfConfig":"11"},{"size":506,"mtime":1645956170123,"results":"18","hashOfConfig":"11"},{"size":2810,"mtime":1646023928794,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ka36n",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/index.js",[],[],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/reportWebVitals.js",[],[],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/App.js",["51","52"],[],"// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div classNameName=\"App\">\n//       <header classNameName=\"App-header\">\n//         <img src={logo} classNameName=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           classNameName=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>  \n//   );\n// }\n\n// export default App;\nimport React from 'react';\nimport '../index.css';\nimport trash from '../images/trash.svg';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n\nconst [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\nconst [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\nconst [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n\n// const [isAddPlacePopupClose, setIsAddPlacePopupClose] = React.useState(true);\n// const [isEditAvatarPopupClose, setIsEditAvatarPopupClose] = React.useState(true);\n\nfunction handleEditProfileClick() {\n  setIsEditProfilePopupOpen(!isEditProfilePopupOpen); \n}\nfunction handleAddPlaceClick() {\n  setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n}\nfunction handleEditAvatarClick() {\n  setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n}\n\nfunction closeAllPopups() {\n  setIsEditProfilePopupOpen(false);\n  setIsEditAvatarPopupOpen(false);\n  setIsAddPlacePopupOpen(false);\n}\n\n\nreturn (\n<body className=\"page\">\n  <div className=\"page__container\">\n    <Header />\n    <Main \n      onEditProfile={handleEditProfileClick}\n      onAddPlace={handleAddPlaceClick}\n      onEditAvatar={handleEditAvatarClick}\n     />\n    <Footer />\n    <PopupWithForm name=\"profile-popup\" title=\"Редактировать профиль\" button=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} >\n      <input type=\"text\" className=\"popup__input-text popup__input-text_type_name\" id=\"popup-name\" name=\"name\" placeholder=\"Имя\" required\n        minlength=\"2\" maxlength=\"40\" /> \n      <span id=\"popup-name-error\" className=\"error\"></span>\n      <input type=\"text\" className=\"popup__input-text popup__input-text_type_specialty\" id=\"popup-specialty\" name=\"about\" placeholder=\"Специальность\" required\n        minlength=\"2\" maxlength=\"200\" />\n      <span id=\"popup-specialty-error\" className=\"error\"></span>\n    </PopupWithForm>\n    <PopupWithForm name=\"card-popup\" title=\"Новое место\" button=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n      <input type=\"text\" className=\"popup__input-text popup__input-text_type_title\" id=\"popup-title\" name=\"name\" placeholder=\"Название\" required\n        minlength=\"2\" maxlength=\"30\" /> \n      <span id=\"popup-title-error\" className=\"error\"></span>\n      <input type=\"url\" className=\"popup__input-text popup__input-text_type_image\" id=\"popup-image\" name=\"link\" placeholder=\"Ссылка\" required />\n      <span id=\"popup-image-error\" className=\"error\"></span>\n    </PopupWithForm>\n    <PopupWithForm name=\"confirm-popup\" title=\"Вы уверены?\" button=\"Да\" />\n    <PopupWithForm name=\"avatar-popup\" title=\"Обновить аватар\" button=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n      <input type=\"url\" className=\"popup__input-text popup__input-text_type_image popup__input-text_type_avatarUrl\" id=\"popup-avatar\" name=\"name\" placeholder=\"Ссылка на аватар\" required\n        minlength=\"2\" maxlength=\"300\"/> \n      <span id=\"popup-avatar-error\" className=\"error\"></span>\n    </PopupWithForm>\n    <ImagePopup />\n</div>\n  \n\n  \n<template className=\"template\">\n  <article className=\"elements__item\">\n    <button className=\"elements__button-delete\" type=\"button\">\n      <img src={trash} alt=\"Удалить\"/>\n    </button>\n    <img className=\"elements__image\"/>\n    <div className=\"elements__describe\">\n      <h3 className=\"elements__name\"></h3>\n      <div className = \"elements__like\">\n        <button className=\"elements__button-like\" type=\"button\">\n        </button>\n        <p className=\"elements__like-counter\"></p>\n      </div>\n    </div>\n  </article>\n</template>\n</body>\n);\n\n}\nexport default App;","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Header.js",[],[],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Main.js",["53","54","55","56"],[],"import React from 'react';\nimport custo from '../images/custo.jpg';\nimport edit from '../images/edit.svg';\nimport add from '../images/add.svg';\nimport Api from '../utils/api.js';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState([]);\n  React.useEffect( () => {\n    Api.getUserData(userName).then((data) => {\n      setUserName(\n        {\n          title: data.about\n        }\n      )\n    });\n  }, []);\n    const [userDescription, setUserDescription] = React.useState([]);\n    React.useEffect( () => {\n      Api.getUserData(userDescription).then((data) => {\n        setUserDescription(\n          {\n            name: data.name\n          }\n        )\n      });\n    }, []);\n    const [userAvatar, setUserAvatar] = React.useState([]);\n    React.useEffect( () => {\n      Api.getUserData(userAvatar).then((data) => {\n        setUserAvatar(\n          {\n            avatar: data.avatar\n          }\n        )\n      });\n    }, []);\n\n    return (\n      <>\n        <main className=\"page__content\">\n          <div className=\"profile\">\n            <img className=\"profile__image\" src={userAvatar.avatar} alt=\"Аватар\"/>\n            <div className=\"profile__image-edit\" onClick={props.onEditAvatar}>\n            </div>\n          <div className=\"profile__info\">\n            <h1 className=\"profile__title\">{userName.title}</h1>\n            <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}>\n              <img src={edit} alt=\"Кнопка - редактирование\"/>\n            </button>\n            <p className=\"profile__subtitle\">{userDescription.name}</p>\n          </div>\n          <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}>\n            <img src={add} alt=\"Кнопка - добавить\"/>\n          </button>\n          </div>\n          <section className=\"elements\">\n          </section>\n        </main>\n      </>\n    )\n}\nexport default Main;","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Footer.js",[],[],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/PopupWithForm.js",[],[],["57","58"],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/ImagePopup.js",[],[],["59","60"],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/utils/api.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":103,"column":5,"nodeType":"63","endLine":103,"endColumn":39},{"ruleId":"64","severity":1,"message":"65","line":105,"column":7,"nodeType":"63","endLine":105,"endColumn":38},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":17,"column":6,"nodeType":"72","endLine":17,"endColumn":8,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":27,"column":8,"nodeType":"72","endLine":27,"endColumn":10,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"76","line":37,"column":8,"nodeType":"72","endLine":37,"endColumn":10,"suggestions":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-unused-vars","'custo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook React.useEffect has a missing dependency: 'userDescription'. Either include it or remove the dependency array.",["85"],"React Hook React.useEffect has a missing dependency: 'userAvatar'. Either include it or remove the dependency array.",["86"],"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [userName]",{"range":"95","text":"96"},"Update the dependencies array to be: [userDescription]",{"range":"97","text":"98"},"Update the dependencies array to be: [userAvatar]",{"range":"99","text":"100"},[419,421],"[userName]",[686,688],"[userDescription]",[937,939],"[userAvatar]"]