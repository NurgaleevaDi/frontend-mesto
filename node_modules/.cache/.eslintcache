[{"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/index.js":"1","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/reportWebVitals.js":"2","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/App.js":"3","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Header.js":"4","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Main.js":"5","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Footer.js":"6"},{"size":511,"mtime":1645896813690,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1645880479528,"results":"9","hashOfConfig":"8"},{"size":5470,"mtime":1645901127246,"results":"10","hashOfConfig":"8"},{"size":328,"mtime":1645898321959,"results":"11","hashOfConfig":"8"},{"size":1517,"mtime":1645901482953,"results":"12","hashOfConfig":"8"},{"size":267,"mtime":1645898651651,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"2ka36n",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/index.js",[],[],["35","36"],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/reportWebVitals.js",[],[],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/App.js",["37","38"],[],"// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div classNameName=\"App\">\n//       <header classNameName=\"App-header\">\n//         <img src={logo} classNameName=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           classNameName=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>  \n//   );\n// }\n\n// export default App;\nimport '../index.css';\nimport trash from '../images/trash.svg';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nfunction App() {\nreturn (\n<body className=\"page\">\n  <div className=\"page__container\">\n    <Header />\n    <Main />\n    <Footer />\n    \n    <div className=\"popup profile-popup\">\n      <div className=\"popup-overlay popup__close\"></div>\n      <div className=\"popup__content\">  \n        <button className=\"popup__button popup__close\" type=\"button\">\n        </button>\n        <form className=\"popup__input popup__input_profile\" name=\"popup__input_profile\">\n          <h2 className=\"popup__input-title\">Редактировать профиль</h2>\n          <input type=\"text\" className=\"popup__input-text popup__input-text_type_name\" id=\"popup-name\" name=\"name\" placeholder=\"Имя\" required\n            minlength=\"2\" maxlength=\"40\" /> \n          <span id=\"popup-name-error\" className=\"error\"></span>\n          <input type=\"text\" className=\"popup__input-text popup__input-text_type_specialty\" id=\"popup-specialty\" name=\"about\" placeholder=\"Специальность\" required\n            minlength=\"2\" maxlength=\"200\" />\n          <span id=\"popup-specialty-error\" className=\"error\"></span>\n          <button type=\"submit\" className=\"popup__input-button\">\n            Сохранить\n          </button>\n        </form>\n      </div> \n    </div>\n    <div className=\"popup card-popup\">\n      <div className=\"popup-overlay popup-overlay-card popup__close\"></div>\n      <div className=\"popup__content\">  \n        <button className=\"popup__button popup__button_card popup__close\" type=\"button\">\n        </button>\n        <form className=\"popup__input popup__input_newEl\" name=\"popup__input_newEl\">\n          <h2 className=\"popup__input-title\">Новое место</h2>\n          <input type=\"text\" className=\"popup__input-text popup__input-text_type_title\" id=\"popup-title\" name=\"name\" placeholder=\"Название\" required\n            minlength=\"2\" maxlength=\"30\" /> \n          <span id=\"popup-title-error\" className=\"error\"></span>\n          <input type=\"url\" className=\"popup__input-text popup__input-text_type_image\" id=\"popup-image\" name=\"link\" placeholder=\"Ссылка\" required />\n          <span id=\"popup-image-error\" className=\"error\"></span>\n          <button type=\"submit\" className=\"popup__input-button popup__input-button_card\">\n            Создать\n          </button>\n        </form>\n      </div> \n    </div>\n    <div className=\"popup popup-image\">\n      <div className=\"popup-overlay popup-overlay-image popup__close\"></div>\n      <div className=\"popup-image__content\">\n        <button className=\"popup-image__button popup__close\" type=\"button\">\n        </button>\n        <img className=\"popup-image__image\" src=\"#\" alt=\"Изображение\"/>\n        <p className=\"popup-image__title\"></p>\n      </div>  \n    </div>\n  </div>\n  <div className=\"popup confirm-popup\">\n    <div className=\"popup-overlay popup__close\"></div>\n    <div className=\"popup__content\">  \n      <button className=\"popup__button popup__close\" type=\"button\">\n      </button>\n      <form className=\"popup__input popup__input_confirm-delete\" name=\"popup__input_profile\">\n        <h2 className=\"popup__input-title\">Вы уверены</h2>\n        <button type=\"submit\" className=\"popup__input-button popup__input-button_confirm\">\n          Да\n        </button>\n      </form> \n    </div> \n  </div>  \n  <div className=\"popup avatar-popup\">\n    <div className=\"popup-overlay popup__close\"></div>\n    <div className=\"popup__content\">  \n      <button className=\"popup__button popup__close\" type=\"button\">\n      </button>\n      <form className=\"popup__input popup__input_profile\" name=\"popup__input_profile\">\n        <h2 className=\"popup__input-title\">Обновить аватар</h2>\n        <input type=\"url\" className=\"popup__input-text popup__input-text_type_image popup__input-text_type_avatarUrl\" id=\"popup-avatar\" name=\"name\" placeholder=\"Ссылка на аватар\" required\n          minlength=\"2\" maxlength=\"300\"/> \n        <span id=\"popup-avatar-error\" className=\"error\"></span>\n        <button type=\"submit\" className=\"popup__input-button\">\n          Сохранить\n        </button>\n      </form>\n    </div> \n  </div>\n<template className=\"template\">\n  <article className=\"elements__item\">\n    <button className=\"elements__button-delete\" type=\"button\">\n      <img src={trash} alt=\"Удалить\"/>\n    </button>\n    <img className=\"elements__image\"/>\n    <div className=\"elements__describe\">\n      <h3 className=\"elements__name\"></h3>\n      <div className = \"elements__like\">\n        <button className=\"elements__button-like\" type=\"button\">\n        </button>\n        <p className=\"elements__like-counter\"></p>\n      </div>\n    </div>\n  </article>\n</template>\n</body>\n);\n}\nexport default App;","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Header.js",[],[],"/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Main.js",["39"],[],"import React from 'react';\nimport custo from '../images/custo.jpg';\nimport edit from '../images/edit.svg';\nimport add from '../images/add.svg';\n\nfunction Main() {\n    function handleEditProfileClick() {\n       document.querySelector('.profile-popup').classList.add('popup_opened');\n    }\n    function handleAddPlaceClick() {\n        document.querySelector('.card-popup').classList.add('popup_opened');\n    }\n    function handleEditAvatarClick() {\n        document.querySelector('.avatar-popup').classList.add('popup_opened');\n    }\n    return (\n      <>\n        <main className=\"page__content\">\n          <div className=\"profile\">\n            <img className=\"profile__image\" src={custo} alt=\"Изображение Жака Кусто\"/>\n            <div className=\"profile__image-edit\" onClick={handleEditAvatarClick}>\n            </div>\n          <div className=\"profile__info\">\n            <h1 className=\"profile__title\"></h1>\n            <button className=\"profile__edit-button\" type=\"button\" onClick={handleEditProfileClick}>\n              <img src={edit} alt=\"Кнопка - редактирование\"/>\n            </button>\n            <p className=\"profile__subtitle\"></p>\n          </div>\n          <button className=\"profile__add-button\" type=\"button\" onClick={handleAddPlaceClick}>\n            <img src={add} alt=\"Кнопка - добавить\"/>\n          </button>\n          </div>\n          <section className=\"elements\">\n          </section>\n        </main>\n      </>\n    )\n}\nexport default Main;","/Users/diananurgaleeva/Desktop/dev/mesto-react/src/components/Footer.js",[],[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":121,"column":5,"nodeType":"46","endLine":121,"endColumn":39},{"ruleId":"47","severity":1,"message":"48","line":123,"column":7,"nodeType":"46","endLine":123,"endColumn":38},{"ruleId":"47","severity":1,"message":"48","line":24,"column":13,"nodeType":"46","endLine":24,"endColumn":44},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]